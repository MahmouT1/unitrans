#!/bin/bash

echo "=================================================="
echo "๐ง ุฅุตูุงุญ ูููุงุช .env ูุฅุนุงุฏุฉ ุชุดุบูู ุงูุฎุฏูุงุช"
echo "=================================================="
echo ""

GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

PROJECT_DIR="/var/www/unitrans"
cd $PROJECT_DIR || exit 1

# ==========================================
# 1. ุชุญุฏูุซ Frontend .env.local
# ==========================================
echo "=================================================="
echo -e "${YELLOW}1๏ธโฃ  ุชุญุฏูุซ Frontend .env.local${NC}"
echo "=================================================="

echo -e "${BLUE}ุงูููู ุงูุญุงููุฉ ูู frontend-new/.env.local:${NC}"
cat frontend-new/.env.local
echo ""

# Backup
cp frontend-new/.env.local frontend-new/.env.local.backup
echo -e "${GREEN}โ ุชู ุญูุธ ูุณุฎุฉ ุงุญุชูุงุทูุฉ: .env.local.backup${NC}"

# Update BACKEND_URL to use https://unibus.online:3001
cat > frontend-new/.env.local << 'EOF'
# Backend API URL - ุงุณุชุฎุฏุงู ุงูุฏูููู ุงููุนูู
NEXT_PUBLIC_BACKEND_URL=https://unibus.online:3001
BACKEND_URL=https://unibus.online:3001

# MongoDB Configuration
MONGODB_URI=mongodb://localhost:27017
MONGODB_DB_NAME=student_portal

# Next.js
NEXT_PUBLIC_API_URL=https://unibus.online
EOF

echo -e "${GREEN}โ ุชู ุชุญุฏูุซ .env.local${NC}"
echo ""
echo -e "${BLUE}ุงูููู ุงูุฌุฏูุฏุฉ:${NC}"
cat frontend-new/.env.local
echo ""

# ==========================================
# 2. ุชุญุฏูุซ Backend .env
# ==========================================
echo "=================================================="
echo -e "${YELLOW}2๏ธโฃ  ุงูุชุญูู ูู Backend .env${NC}"
echo "=================================================="

echo -e "${BLUE}ุงูููู ุงูุญุงููุฉ ูู backend-new/.env:${NC}"
cat backend-new/.env
echo ""

# Make sure CORS is configured for the domain
if ! grep -q "FRONTEND_URL" backend-new/.env; then
    echo "" >> backend-new/.env
    echo "FRONTEND_URL=https://unibus.online" >> backend-new/.env
    echo -e "${GREEN}โ ุฃุถูู FRONTEND_URL ููู .env${NC}"
fi
echo ""

# ==========================================
# 3. ุฅุนุงุฏุฉ ุจูุงุก Frontend
# ==========================================
echo "=================================================="
echo -e "${YELLOW}3๏ธโฃ  ุฅุนุงุฏุฉ ุจูุงุก Frontend${NC}"
echo "=================================================="

cd frontend-new
echo -e "${BLUE}ุฌุงุฑู ุงูุจูุงุก...${NC}"
npm run build

if [ $? -eq 0 ]; then
    echo -e "${GREEN}โ ุงูุจูุงุก ูุฌุญ${NC}"
else
    echo -e "${RED}โ ุงูุจูุงุก ูุดู${NC}"
    exit 1
fi
cd ..
echo ""

# ==========================================
# 4. ุฅุนุงุฏุฉ ุชุดุบูู ุฌููุน ุงูุฎุฏูุงุช
# ==========================================
echo "=================================================="
echo -e "${YELLOW}4๏ธโฃ  ุฅุนุงุฏุฉ ุชุดุบูู ุงูุฎุฏูุงุช${NC}"
echo "=================================================="

if command -v pm2 &> /dev/null; then
    echo -e "${BLUE}ุฅููุงู ุงูุฎุฏูุงุช ุงููุฏููุฉ...${NC}"
    pm2 stop all
    
    echo -e "${BLUE}ุจุฏุก ุงูุฎุฏูุงุช...${NC}"
    
    # Start Backend
    cd backend-new
    pm2 delete backend-new 2>/dev/null || true
    pm2 start server.js --name backend-new
    cd ..
    
    # Start Frontend
    cd frontend-new
    pm2 delete frontend-new 2>/dev/null || true
    pm2 start npm --name frontend-new -- start
    cd ..
    
    pm2 save
    
    echo -e "${GREEN}โ ุชู ุฅุนุงุฏุฉ ุชุดุบูู ุฌููุน ุงูุฎุฏูุงุช${NC}"
    echo ""
    pm2 list
else
    echo -e "${RED}โ PM2 ุบูุฑ ููุฌูุฏ${NC}"
    echo "ุงูุฑุฌุงุก ุชุดุบูู ุงูุฎุฏูุงุช ูุฏููุงู:"
    echo "  Backend: cd backend-new && node server.js &"
    echo "  Frontend: cd frontend-new && npm start &"
fi
echo ""

# ==========================================
# 5. ุงุฎุชุจุงุฑ ุงูุฎุฏูุงุช
# ==========================================
echo "=================================================="
echo -e "${YELLOW}5๏ธโฃ  ุงุฎุชุจุงุฑ ุงูุฎุฏูุงุช${NC}"
echo "=================================================="

echo -e "${BLUE}ุงูุชุธุงุฑ 5 ุซูุงู...${NC}"
sleep 5

echo ""
echo "Port 3000 (Frontend):"
if lsof -i :3000 > /dev/null 2>&1; then
    echo -e "${GREEN}  โ ูุนูู${NC}"
else
    echo -e "${RED}  โ ูุง ูุนูู${NC}"
fi

echo "Port 3001 (Backend):"
if lsof -i :3001 > /dev/null 2>&1; then
    echo -e "${GREEN}  โ ูุนูู${NC}"
else
    echo -e "${RED}  โ ูุง ูุนูู${NC}"
fi

echo "Port 27017 (MongoDB):"
if lsof -i :27017 > /dev/null 2>&1; then
    echo -e "${GREEN}  โ ูุนูู${NC}"
else
    echo -e "${RED}  โ ูุง ูุนูู${NC}"
fi

echo ""
echo "=================================================="
echo -e "${GREEN}โ ุงูุชูู!${NC}"
echo "=================================================="
echo ""
echo "ุงูุขู ุฌุฑุจ ูุชุญ:"
echo "  https://unibus.online/admin/users"
echo ""
echo "ูุชุญูู ูู Console (F12) ููุชุฃูุฏ ูู ุนุฏู ูุฌูุฏ ุฃุฎุทุงุก"
echo ""
