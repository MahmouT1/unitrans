const { MongoClient } = require('mongodb');
const bcrypt = require('bcrypt');

async function addUsersDirectly() {
  console.log('๐ฅ ุฅุถุงูุฉ ูุณุชุฎุฏููู ูุจุงุดุฑุฉ ููุงุนุฏุฉ ุงูุจูุงูุงุช...');
  
  const client = new MongoClient('mongodb://localhost:27017');
  
  try {
    await client.connect();
    console.log('โ ูุชุตู ุจู MongoDB');
    
    const db = client.db('student_portal');
    const usersCollection = db.collection('users');
    
    // ุญุฐู ุงููุณุชุฎุฏููู ุงูููุฌูุฏูู
    await usersCollection.deleteMany({});
    console.log('๐งน ุชู ุญุฐู ุงููุณุชุฎุฏููู ุงูุณุงุจููู');
    
    // ุฅุถุงูุฉ ูุณุชุฎุฏููู ุฌุฏุฏ
    const users = [
      {
        email: 'test@test.com',
        password: await bcrypt.hash('123456', 12),
        fullName: 'Test Student',
        role: 'student',
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        email: 'roo2admin@gmail.com',
        password: await bcrypt.hash('admin123', 12),
        fullName: 'Root Administrator',
        role: 'admin',
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        email: 'ahmedazab@gmail.com',
        password: await bcrypt.hash('supervisor123', 12),
        fullName: 'Ahmed Azab',
        role: 'supervisor',
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        email: 'mostafamohamed@gmail.com',
        password: await bcrypt.hash('student123', 12),
        fullName: 'Mostafa Mohamed',
        role: 'student',
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date()
      }
    ];
    
    const result = await usersCollection.insertMany(users);
    console.log(`โ ุชู ุฅุถุงูุฉ ${result.insertedCount} ูุณุชุฎุฏููู`);
    
    // ุทุจุงุนุฉ ุงููุณุชุฎุฏููู ุงููุถุงููู
    const allUsers = await usersCollection.find({}).toArray();
    console.log('\n๐ฅ ุงููุณุชุฎุฏููู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช:');
    allUsers.forEach(user => {
      console.log(`  ๐ง ${user.email} | ๐ค ${user.role} | ๐ค ${user.fullName}`);
    });
    
    console.log('\n๐ฏ ุญุณุงุจุงุช ุงูุงุฎุชุจุงุฑ:');
    console.log('  ๐ง test@test.com | ๐ 123456 | ๐ค student');
    console.log('  ๐ง roo2admin@gmail.com | ๐ admin123 | ๐ค admin');
    console.log('  ๐ง ahmedazab@gmail.com | ๐ supervisor123 | ๐ค supervisor');
    console.log('  ๐ง mostafamohamed@gmail.com | ๐ student123 | ๐ค student');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ:', error);
  } finally {
    await client.close();
    console.log('๐ ุชู ูุทุน ุงูุงุชุตุงู ุจู MongoDB');
  }
}

// ุชุดุบูู ุงูุฏุงูุฉ
addUsersDirectly().then(() => {
  console.log('\nโ ุงูุชูู ุฅุถุงูุฉ ุงููุณุชุฎุฏููู!');
  process.exit(0);
}).catch(error => {
  console.error('โ ูุดู ูู ุฅุถุงูุฉ ุงููุณุชุฎุฏููู:', error);
  process.exit(1);
});
