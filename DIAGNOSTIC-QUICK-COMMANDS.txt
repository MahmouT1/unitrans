============================================
أوامر سريعة للفحص التشخيصي - نسخ ولصق
============================================

📋 انسخ هذه الأوامر واحدة تلو الأخرى على السيرفر:

--------------------------------------------
الخطوة 1: الذهاب للمشروع
--------------------------------------------
cd /var/www/unitrans

--------------------------------------------
الخطوة 2: إنشاء ملف الفحص
--------------------------------------------
cat > test-database-connection.sh << 'ENDOFFILE'
#!/bin/bash

echo "=================================================="
echo "🔍 فحص شامل لقاعدة البيانات والاتصالات"
echo "=================================================="
echo ""

GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

PROJECT_DIR="/var/www/unitrans"
cd $PROJECT_DIR || exit 1

echo -e "${BLUE}📂 المسار: $(pwd)${NC}"
echo ""

# 1. فحص MongoDB
echo "=================================================="
echo -e "${YELLOW}1️⃣  فحص MongoDB${NC}"
echo "=================================================="
if systemctl is-active --quiet mongod; then
    echo -e "${GREEN}✅ MongoDB يعمل${NC}"
else
    echo -e "${RED}❌ MongoDB لا يعمل - محاولة التشغيل...${NC}"
    sudo systemctl start mongod
fi
echo ""

# 2. فحص الجداول
echo "=================================================="
echo -e "${YELLOW}2️⃣  الجداول الموجودة في قاعدة البيانات${NC}"
echo "=================================================="
mongo --quiet --eval "
db = db.getSiblingDB('student_portal');
print('📊 قاعدة البيانات: student_portal\n');
print('📁 الجداول:\n');
db.getCollectionNames().forEach(function(name) {
    var count = db[name].count();
    print('  ➜ ' + name + ': ' + count + ' سجل');
});
"
echo ""

# 3. فحص جدول الطلاب
echo "=================================================="
echo -e "${YELLOW}3️⃣  تفاصيل جدول الطلاب${NC}"
echo "=================================================="
mongo student_portal --quiet --eval "
var totalStudents = db.students.count();
print('إجمالي الطلاب: ' + totalStudents + '\n');

if (totalStudents > 0) {
    print('بنية البيانات (نموذج طالب واحد):');
    print('====================================');
    var sample = db.students.findOne();
    printjson(sample);
    print('\n');
    
    print('الحقول الموجودة:');
    print('====================================');
    Object.keys(sample).forEach(function(key) {
        print('  ✓ ' + key + ' (' + typeof sample[key] + ')');
    });
    print('\n');
    
    print('نماذج من 3 طلاب:');
    print('====================================');
    db.students.find().limit(3).forEach(function(s) {
        print('📌 ' + (s.fullName || 'بدون اسم'));
        print('   Email: ' + s.email);
        print('   College: ' + (s.college || 'N/A'));
        print('   Major: ' + (s.major || 'N/A'));
        print('   Attendance: ' + (s.attendanceCount || 0));
        print('   Active: ' + (s.isActive || false));
        print('   ---');
    });
} else {
    print('⚠️  لا يوجد طلاب!');
}
"
echo ""

# 4. فحص Backend API
echo "=================================================="
echo -e "${YELLOW}4️⃣  اختبار Backend API${NC}"
echo "=================================================="
echo "GET /api/students/all:"
curl -s http://localhost:3001/api/students/all?page=1&limit=3 | head -30
echo ""
echo ""

# 5. فحص Frontend API
echo "=================================================="
echo -e "${YELLOW}5️⃣  اختبار Frontend API${NC}"
echo "=================================================="
echo "GET /api/students/all:"
curl -s http://localhost:3000/api/students/all?page=1&limit=3 2>&1 | head -20
echo ""
echo ""

# 6. فحص Frontend API Routes الموجودة
echo "=================================================="
echo -e "${YELLOW}6️⃣  API Routes الموجودة في Frontend${NC}"
echo "=================================================="
if [ -d "frontend-new/app/api/students" ]; then
    echo "مسارات /api/students الموجودة:"
    find frontend-new/app/api/students -type d | sed 's|frontend-new/app|  →|'
else
    echo "⚠️  مجلد app/api غير موجود"
fi
echo ""

# 7. فحص الخدمات
echo "=================================================="
echo -e "${YELLOW}7️⃣  حالة الخدمات${NC}"
echo "=================================================="
if command -v pm2 &> /dev/null; then
    pm2 list
else
    echo "PM2 غير مثبت"
fi
echo ""

# 8. فحص المنافذ
echo "=================================================="
echo -e "${YELLOW}8️⃣  المنافذ${NC}"
echo "=================================================="
echo "Port 3000 (Frontend):"
if sudo lsof -i :3000 > /dev/null 2>&1; then
    echo "  ✅ يعمل"
else
    echo "  ❌ لا يعمل"
fi

echo "Port 3001 (Backend):"
if sudo lsof -i :3001 > /dev/null 2>&1; then
    echo "  ✅ يعمل"
else
    echo "  ❌ لا يعمل"
fi

echo "Port 27017 (MongoDB):"
if sudo lsof -i :27017 > /dev/null 2>&1; then
    echo "  ✅ يعمل"
else
    echo "  ❌ لا يعمل"
fi
echo ""

echo "=================================================="
echo "✅ انتهى الفحص!"
echo "=================================================="
echo "📤 أرسل كامل النتيجة للمراجعة"
echo ""
ENDOFFILE

--------------------------------------------
الخطوة 3: إعطاء صلاحيات التنفيذ
--------------------------------------------
chmod +x test-database-connection.sh

--------------------------------------------
الخطوة 4: تشغيل الفحص
--------------------------------------------
./test-database-connection.sh

============================================

✅ بعد تشغيل الأوامر أعلاه:

1. انتظر حتى ينتهي الفحص (10-30 ثانية)
2. انسخ كامل النتيجة من البداية للنهاية
3. أرسلها لي في الرد
4. سأقوم بتحليلها وإعطائك الحل المناسب

============================================
