#!/bin/bash

echo "๐ง ุงูุญู ุงูููุงุฆู ูู QR Code"
echo "============================"
echo ""

cd /var/www/unitrans/frontend-new/app/api/students/generate-qr

# ุฅูุดุงุก ุงูููู ุงูุตุญูุญ
cat > route.js << 'ENDFILE'
import { NextResponse } from 'next/server';

export async function POST(request) {
  try {
    const body = await request.json();
    console.log('[Generate QR] Received body:', body);
    
    const { email, studentData } = body;
    
    // ุงุณุชุฎุฑุงุฌ email ูู ุฃู ูุตุฏุฑ
    let studentEmail = email;
    if (!studentEmail && studentData) {
      studentEmail = studentData.email;
    }
    
    console.log('[Generate QR] Extracted email:', studentEmail);
    
    if (!studentEmail) {
      console.log('[Generate QR] ERROR: No email found!');
      return NextResponse.json(
        { success: false, message: 'Email is required' },
        { status: 400 }
      );
    }
    
    // ุฅุฑุณุงู ููู Backend ูุน ูู ูู email ู studentData
    const backendRequest = {
      email: studentEmail
    };
    
    if (studentData) {
      backendRequest.studentData = studentData;
    }
    
    console.log('[Generate QR] Sending to backend:', backendRequest);
    
    const backendUrl = 'http://localhost:3001';
    const response = await fetch(`${backendUrl}/api/students/generate-qr`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(backendRequest)
    });
    
    const data = await response.json();
    console.log('[Generate QR] Backend response:', data.success ? 'Success!' : 'Failed');
    
    return NextResponse.json(data);
    
  } catch (error) {
    console.error('[Generate QR] Exception:', error);
    return NextResponse.json(
      { success: false, message: error.message },
      { status: 500 }
    );
  }
}
ENDFILE

echo "โ ุชู ุฅูุดุงุก route.js ุงูุฌุฏูุฏ"
echo ""

# ุฅุนุงุฏุฉ ุจูุงุก
cd /var/www/unitrans/frontend-new

echo "ุญุฐู .next..."
rm -rf .next

echo "ุงูุจูุงุก..."
npm run build

if [ $? -ne 0 ]; then
    echo "โ Build ูุดู!"
    exit 1
fi

echo ""
echo "โ Build ูุฌุญ"
echo ""

# ุฅุนุงุฏุฉ ุชุดุบูู
cd /var/www/unitrans

pm2 restart unitrans-frontend
pm2 save

echo "ุงูุชุธุงุฑ 5 ุซูุงู..."
sleep 5

echo ""
echo "============================"
echo "ุงุฎุชุจุงุฑ ูุน email ููุท:"
curl -X POST http://localhost:3000/api/students/generate-qr \
  -H "Content-Type: application/json" \
  -d '{"email":"mahmoudtarekmonaim@gmail.com"}' 2>&1 | head -c 200

echo ""
echo ""

echo "ุงุฎุชุจุงุฑ ูุน studentData:"
curl -X POST http://localhost:3000/api/students/generate-qr \
  -H "Content-Type: application/json" \
  -d '{"studentData":{"email":"mahmoudtarekmonaim@gmail.com","fullName":"mahmoud"}}' 2>&1 | head -c 200

echo ""
echo ""
echo "============================"
echo "โ ุชู!"
echo "============================"
echo ""
echo "ุฌุฑุจ ูู ุงููุชุตูุญ ุงูุขู!"
echo "ุงุญุฐู cache ุฃููุงู!"
echo ""

pm2 list
